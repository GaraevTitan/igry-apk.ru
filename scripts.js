// –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à–∏ —Å–∫—Ä–∏–ø—Ç—ã
console.log("–°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!");

document.querySelectorAll('.dropdown').forEach(dropdown => {
    dropdown.addEventListener('mouseover', () => {
        dropdown.querySelector('.dropdown-content').style.display = 'block';
    });
    dropdown.addEventListener('mouseout', () => {
        dropdown.querySelector('.dropdown-content').style.display = 'none';
    });
});

document.querySelectorAll('.toggle-button').forEach(button => {
    button.addEventListener('click', () => {
        const content = button.nextElementSibling;
        if (content.style.display === 'none' || content.style.display === '') {
            content.style.display = 'block';
            if (button.textContent.includes('+')) {
                button.textContent = button.textContent.replace('+', '-');
            }
        } else {
            content.style.display = 'none';
            if (button.textContent.includes('-')) {
                button.textContent = button.textContent.replace('-', '+');
            }
        }
    });
});

document.querySelectorAll('.dropdown-title').forEach(title => {
    title.addEventListener('click', () => {
        const dropdown = title.parentElement;
        dropdown.classList.toggle('open'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å "open"
    });
});

document.querySelector('.menu-toggle').addEventListener('click', () => {
    const dropdown = document.querySelector('.mobile-dropdown');
    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
document.querySelector('.menu-toggle').addEventListener('click', function() {
    const menu = this.closest('.hamburger-menu');
    menu.classList.toggle('active');
    menu.querySelector('.mobile-nav').style.display = 
        menu.classList.contains('active') ? 'block' : 'none';
});

document.querySelector('.mobile-dropdown-title').addEventListener('click', function() {
    const dropdownItem = this.parentElement;
    dropdownItem.classList.toggle('active');
});

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
const gamesDatabase = [
    {
        id: 1,
        title: "Dream Road: Online",
        description: "–í–∑–ª–æ–º Dream Road: Multiplayer –¥–ª—è Android ‚Äì –ì–æ–Ω–∫–∏ —Å –ú–æ–¥ –ú–µ–Ω—é",
        image: "photo/unnamed.jpg",
        downloadUrl: "download1.html"
    },
    {
        id: 2,
        title: "Schoolboy RunaWay",
        description: "–ß–∏—Ç –Ω–∞ Schoolboy RunaWay —Å –º–æ–¥–æ–º",
        image: "photo/Schoolboy.jpg",
        downloadUrl: "download2.html"
    }
    // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏–≥—Ä –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞
function searchGames(query) {
    const searchResults = document.querySelector('.games-grid');
    query = query.toLowerCase().trim();
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    searchResults.innerHTML = '';

    if (query.length < 2) return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã

    // –§–∏–ª—å—Ç—Ä—É–µ–º –∏–≥—Ä—ã
    const results = gamesDatabase.filter(game => 
        game.title.toLowerCase().includes(query) || 
        game.description.toLowerCase().includes(query)
    );

    if (results.length === 0) {
        searchResults.innerHTML = '<p class="no-results">–ò–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    results.forEach(game => {
        const gameCard = createGameCard(game);
        searchResults.appendChild(gameCard);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞
    if (!searchHistory.includes(query)) {
        searchHistory.push(query);
    }
}

function createGameCard(game) {
    const article = document.createElement('article');
    article.className = 'game-card';
    article.innerHTML = `
        <img src="${game.image}" alt="${game.title}" class="game-card__image">
        <div class="game-card__content">
            <h3 class="game-card__title">${game.title}</h3>
            <p class="game-card__desc">${game.description}</p>
            <a href="${game.downloadUrl}" class="download-btn">–°–∫–∞—á–∞—Ç—å</a>
        </div>
    `;
    return article;
}

// –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
let searchHistory = [];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
function showSearchSuggestions(query) {
    const searchInput = document.querySelector('.search-bar input');
    let suggestions = document.querySelector('.search-suggestions');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!suggestions) {
        suggestions = document.createElement('div');
        suggestions.className = 'search-suggestions';
        searchInput.parentNode.appendChild(suggestions);
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∏–≥—Ä—ã –∏ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞
    const gameResults = gamesDatabase.filter(game => 
        game.title.toLowerCase().includes(query.toLowerCase())
    ).slice(0, 3);
    
    const historyResults = searchHistory.filter(item => 
        item.toLowerCase().includes(query.toLowerCase())
    ).slice(0, 2);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –ø–æ–¥—Å–∫–∞–∑–æ–∫
    suggestions.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –∏–≥—Ä
    gameResults.forEach(game => {
        const div = document.createElement('div');
        div.className = 'suggestion-item';
        div.innerHTML = `
            <img src="${game.image}" alt="${game.title}" class="suggestion-image">
            <div class="suggestion-content">
                <div class="suggestion-title">${game.title}</div>
                <div class="suggestion-category">–ò–≥—Ä–∞</div>
            </div>
        `;
        div.addEventListener('click', () => {
            searchInput.value = game.title;
            searchGames(game.title);
            suggestions.style.display = 'none';
        });
        suggestions.appendChild(div);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
    historyResults.forEach(item => {
        const div = document.createElement('div');
        div.className = 'suggestion-item history';
        div.innerHTML = `
            <i class="history-icon">üïí</i>
            <div class="suggestion-content">
                <div class="suggestion-title">${item}</div>
                <div class="suggestion-category">–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞</div>
            </div>
        `;
        div.addEventListener('click', () => {
            searchInput.value = item;
            searchGames(item);
            suggestions.style.display = 'none';
        });
        suggestions.appendChild(div);
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    suggestions.style.display = 
        query.length >= 2 && (gameResults.length > 0 || historyResults.length > 0) 
            ? 'block' 
            : 'none';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.querySelector('.search-bar input');
    const searchButton = document.querySelector('.search-btn');

    // –ü–æ–∏—Å–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
    searchButton.addEventListener('click', () => {
        searchGames(searchInput.value);
    });

    // –ü–æ–∏—Å–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞ (—Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π)
    let timeout = null;
    searchInput.addEventListener('input', (e) => {
        clearTimeout(timeout);
        timeout = setTimeout(() => {
            searchGames(e.target.value);
        }, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ 500–º—Å

        const query = e.target.value.trim();
        showSearchSuggestions(query);
    });

    // –ü–æ–∏—Å–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
    searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            searchGames(e.target.value);
        }
    });

    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–∏—Å–∫–∞
    document.addEventListener('click', (e) => {
        if (!e.target.closest('.search-bar')) {
            const suggestions = document.querySelector('.search-suggestions');
            if (suggestions) {
                suggestions.style.display = 'none';
            }
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–æ–≤–æ—Å—Ç–µ–π
document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.menu-toggle');
    const mobileMenu = document.querySelector('.mobile-menu');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ
    menuToggle?.addEventListener('click', () => {
        mobileMenu.classList.toggle('active');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', (e) => {
        if (!mobileMenu?.contains(e.target)) {
            mobileMenu?.classList.remove('active');
        }
    });
});

document.getElementById('loadMoreBtn').addEventListener('click', function() {
    document.querySelector('.hidden-games').classList.add('visible');
    this.style.display = 'none'; // —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
});
